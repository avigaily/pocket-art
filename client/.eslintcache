[{"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\index.js":"1","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\App.js":"3","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\GetUserDetails.jsx":"4","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\Board.jsx":"5","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\CreateGame.jsx":"6","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\cardsService.js":"7","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\Card.jsx":"8"},{"size":158,"mtime":1610353497440,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2020,"mtime":1610572501535,"results":"12","hashOfConfig":"10"},{"size":1069,"mtime":1610568984514,"results":"13","hashOfConfig":"10"},{"size":2508,"mtime":1610537922278,"results":"14","hashOfConfig":"10"},{"size":3584,"mtime":1610574781853,"results":"15","hashOfConfig":"10"},{"size":459,"mtime":1609348606441,"results":"16","hashOfConfig":"10"},{"size":322,"mtime":1609343222037,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"3r4vhq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\index.js",[],["38","39"],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\reportWebVitals.js",[],["40","41"],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\App.js",["42","43"],"import React from 'react';\nimport socketIOClient from \"socket.io-client\";\nimport './App.css';\nimport GetUserDetails from \"./components/GetUserDetails\";\nimport CreateGame from \"./components/CreateGame\";\nimport Board from \"./components/Board\";\n\nclass App extends React.Component {\n  state = {\n    endpoint: \"http://localhost:8000\",\n    socket: null,\n    isGameStarted: false,\n    gameId: null,\n    gameData: null,\n    user: null,\n    isRegistered: false\n  };\n\n  componentDidMount() {\n    const { endpoint } = this.state;\n    // Made a connection with server\n    const socket = socketIOClient(endpoint);\n    socket.on(\"connected\", data => {\n      this.setState({ socket: socket })\n    });\n  }\n\n  registrationConfirmation = (res) => {\n    var {user} = res\n    // If registration successfully redirect to player list\n    this.setState({ isRegistered: res.flag});\n  };\n\n  gameStartConfirmation = (data) => {\n    // If select opponent player then start game and redirect to game play\n    this.setState({ isGameStarted: data.status, gameId: data.game_id, gameData: data.game_data });\n    console.log('game start');\n  };\n\n  opponentLeft = (data) => {\n    // If opponent left then get back from game play to player screen\n    alert(\"Opponent Left\");\n    this.setState({ isGameStarted: false, gameId: null, gameData: null });\n  };\n\n  render() {\n    const { user, socket, isGameStarted, gameData , isRegistered} = this.state;\n    return !socket?'loading':(\n      <div className=\"app\">\n        <header>\n          <h1>Pocket Art</h1>\n        </header>\n        <main>\n          {/* if no name entered */ /* else- if no game in action  */ /* else */}\n          {\n            !isRegistered ? < GetUserDetails socket={socket} registrationConfirmation={this.registrationConfirmation} />\n            : !isGameStarted ? < CreateGame socket={socket} gameStartConfirmation={this.gameStartConfirmation} />\n              : < Board socket={socket} gameData={gameData}  />\n          }\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\GetUserDetails.jsx",[],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\Board.jsx",["44","45","46"],"import React from 'react';\r\nimport Card from './Card';\r\nimport { gCards } from '../cardsService';\r\n\r\n\r\n\r\nfunction Board() {\r\n    return 'loading'\r\n\r\n    // return !cards ? 'loading' : (\r\n    //     <section className=\"board\">\r\n    //         <section className=\"opponents\">\r\n    //             {\r\n    //                 gameData.players.map((player, idx) => {\r\n    //                     return (\r\n    //                         <div key={idx} className=\"user\">\r\n    //                             ðŸ˜„\r\n    //                             <p className=\"name\">{player}</p>\r\n    //                             <p>score: {idx}</p>\r\n    //                         </div>\r\n    //                     )\r\n    //                 })\r\n    //             }\r\n\r\n    //         </section>\r\n    //         {\r\n    //             gameData.isUserTurn ? <h3 className=\"description\">{gameData.description} </h3>\r\n    //                 : <label>\r\n    //                     Enter your card description:\r\n    //                     <input\r\n    //                         type=\"text\"\r\n    //                         value={description}\r\n    //                         onChange={event => setDescription(event.target.value)}\r\n    //                     />\r\n    //                 </label>\r\n    //         }\r\n    //         {!isChoosingMyCard &&\r\n    //             <section>\r\n    //                 <p>which card matches best to this description?</p>\r\n    //                 <section className=\"cards\">\r\n    //                     {\r\n    //                         cards.map((card) => {\r\n    //                             return (<Card card={card} />)\r\n    //                         })\r\n    //                     }\r\n    //                 </section>\r\n    //             </section>\r\n    //         }\r\n    //         {isChoosingMyCard &&\r\n    //             <section>\r\n    //                 <div className=\"hidden-cards\">\r\n    //                     <span>choose your card</span>\r\n    //                 </div>\r\n    //                 <section className=\"current-user\">\r\n    //                     {\r\n    //                         cards.map((card) => {\r\n    //                             return (<Card card={card} />)\r\n    //                         })\r\n    //                     }\r\n    //                 </section>\r\n    //                 <button onClick={() => setIsChoosingMyCard(!isChoosingMyCard)}>OK</button>\r\n    //             </section>\r\n    //         }\r\n    //     </section>\r\n    // )\r\n}\r\n\r\n\r\nexport default Board;","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\CreateGame.jsx",["47","48"],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\cardsService.js",[],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\client\\src\\components\\Card.jsx",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"49","replacedBy":"53"},{"ruleId":"51","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":29,"column":10,"nodeType":"57","messageId":"58","endLine":29,"endColumn":14},{"ruleId":"55","severity":1,"message":"56","line":47,"column":13,"nodeType":"57","messageId":"58","endLine":47,"endColumn":17},{"ruleId":"55","severity":1,"message":"59","line":1,"column":8,"nodeType":"57","messageId":"58","endLine":1,"endColumn":13},{"ruleId":"55","severity":1,"message":"60","line":2,"column":8,"nodeType":"57","messageId":"58","endLine":2,"endColumn":12},{"ruleId":"55","severity":1,"message":"61","line":3,"column":10,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"62","line":62,"column":23,"nodeType":"57","messageId":"58","endLine":62,"endColumn":44},{"ruleId":"55","severity":1,"message":"63","line":63,"column":40,"nodeType":"57","messageId":"58","endLine":63,"endColumn":56},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'React' is defined but never used.","'Card' is defined but never used.","'gCards' is defined but never used.","'gameStartConfirmation' is assigned a value but never used.","'opponentResponse' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
[{"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\index.js":"1","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\App.js":"2","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\reportWebVitals.js":"3","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\Board.jsx":"4","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\GetUserDetails.jsx":"5","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\CreateGame.jsx":"6","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\Card.jsx":"7","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\cardsService.js":"8"},{"size":578,"mtime":1607539530875,"results":"9","hashOfConfig":"10"},{"size":1131,"mtime":1608752075270,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2683,"mtime":1609348606442,"results":"13","hashOfConfig":"10"},{"size":354,"mtime":1608734297494,"results":"14","hashOfConfig":"10"},{"size":468,"mtime":1608734727835,"results":"15","hashOfConfig":"10"},{"size":322,"mtime":1609343222037,"results":"16","hashOfConfig":"10"},{"size":459,"mtime":1609348606441,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e78r4h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\index.js",[],["38","39"],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\App.js",["40","41","42","43","44","45","46","47","48","49"],"import React, { useState } from 'react';\n\nimport './App.css';\nimport GetUserDetails from \"./components/GetUserDetails\";\nimport CreateGame from \"./components/CreateGame\";\nimport Board from \"./components/Board\";\n\nfunction App() {\n  const [endpoint, setEndpoint] = useState(\"http://127.0.0.1:4444\");\n  const [socket, setSocket] = useState(null);\n  // const [user, setUser] = useState(null);\n  const [user, setUser] = useState({name:\"avi\"});\n  // const [isGameStarted, setIsGameStarted] = useState(false);\n  const [isGameStarted, setIsGameStarted] = useState(true);\n  const [gameId, setGameId] = useState(null);\n  const [gameData, setGameData] = useState(null);\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Pocket Art</h1>\n        {/* <button>new game</button> */}\n      </header>\n      <main>\n          {/* if no name entered */ /* else- if no game in action  */ /* else */ }\n          {/* Q: why did i get problems when not using () around user? */}\n         {\n           !user ? < GetUserDetails /> : !isGameStarted ? < CreateGame /> : < Board />\n         } \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\reportWebVitals.js",[],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\Board.jsx",["50","51"],"import React, { useState, useEffect } from 'react';\r\nimport Card from './Card'\r\nimport {gCards} from '../cardsService'\r\n\r\nfunction Board({ gameData }) {\r\n    const [description, setDescription] = useState('');\r\n    const [cards, setCards] = useState(null);\r\n    const [isChoosingMyCard, setIsChoosingMyCard] = useState(true);\r\n    useEffect(() => {\r\n        let cards =gCards.slice(0,4)\r\n        setCards(cards)\r\n      }, []);\r\n    return !cards?'loading':(\r\n        <section className=\"board\">\r\n            <section className=\"opponents\">\r\n                <div className=\"user\">\r\n                    ðŸ˜„\r\n                    <p className=\"name\">rony</p>\r\n                    <p>score: {3}</p>\r\n                </div>\r\n                <div className=\"user\">\r\n                    ðŸ˜„\r\n                    <p className=\"name\">yossi</p>\r\n                    <p>score: {7}</p>\r\n                </div>\r\n                <div className=\"user\">\r\n                    ðŸ˜„\r\n                    <p className=\"name\">mali</p>\r\n                    <p>score: {4}</p>\r\n                </div>\r\n            </section>\r\n            <h3 className=\"description\">\r\n                {/* gameData.description */}\r\n                funny\r\n            </h3>\r\n            {/* or */}\r\n            {/* <label>\r\n                Enter your card description:\r\n                <input\r\n                    type=\"text\"\r\n                    value={description}\r\n                    onChange={event => setDescription(event.target.value)}\r\n                />\r\n            </label> */}\r\n            {!isChoosingMyCard &&\r\n                <section>\r\n                    <p>which card matches best to this description?</p>\r\n                    <section className=\"cards\">\r\n                        {\r\n                            cards.map((card) => {\r\n                                return(<Card card={card} />)\r\n                            })\r\n                        }\r\n                    </section>\r\n                </section>\r\n            }\r\n            {isChoosingMyCard &&\r\n                <section>\r\n                    <div className=\"hidden-cards\">\r\n                        <span>choose your card</span>\r\n                    </div>\r\n                    <section className=\"current-user\">\r\n                        {\r\n                            cards.map((card) => {\r\n                               return(<Card card={card} />) \r\n                            })\r\n                        }\r\n                    </section>\r\n                    <button onClick={() => setIsChoosingMyCard(!isChoosingMyCard)}>OK</button>\r\n                </section>\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Board;","C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\GetUserDetails.jsx",[],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\CreateGame.jsx",[],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\components\\Card.jsx",[],["52","53"],"C:\\Users\\Ron\\Desktop\\dev\\she-codes\\pocket-art\\src\\cardsService.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":9,"column":10,"nodeType":"60","messageId":"61","endLine":9,"endColumn":18},{"ruleId":"58","severity":1,"message":"62","line":9,"column":20,"nodeType":"60","messageId":"61","endLine":9,"endColumn":31},{"ruleId":"58","severity":1,"message":"63","line":10,"column":10,"nodeType":"60","messageId":"61","endLine":10,"endColumn":16},{"ruleId":"58","severity":1,"message":"64","line":10,"column":18,"nodeType":"60","messageId":"61","endLine":10,"endColumn":27},{"ruleId":"58","severity":1,"message":"65","line":12,"column":16,"nodeType":"60","messageId":"61","endLine":12,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":14,"column":25,"nodeType":"60","messageId":"61","endLine":14,"endColumn":41},{"ruleId":"58","severity":1,"message":"67","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":16},{"ruleId":"58","severity":1,"message":"68","line":15,"column":18,"nodeType":"60","messageId":"61","endLine":15,"endColumn":27},{"ruleId":"58","severity":1,"message":"69","line":16,"column":10,"nodeType":"60","messageId":"61","endLine":16,"endColumn":18},{"ruleId":"58","severity":1,"message":"70","line":16,"column":20,"nodeType":"60","messageId":"61","endLine":16,"endColumn":31},{"ruleId":"58","severity":1,"message":"71","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":23},{"ruleId":"58","severity":1,"message":"72","line":6,"column":25,"nodeType":"60","messageId":"61","endLine":6,"endColumn":39},{"ruleId":"54","replacedBy":"73"},{"ruleId":"56","replacedBy":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'endpoint' is assigned a value but never used.","Identifier","unusedVar","'setEndpoint' is assigned a value but never used.","'socket' is assigned a value but never used.","'setSocket' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setIsGameStarted' is assigned a value but never used.","'gameId' is assigned a value but never used.","'setGameId' is assigned a value but never used.","'gameData' is assigned a value but never used.","'setGameData' is assigned a value but never used.","'description' is assigned a value but never used.","'setDescription' is assigned a value but never used.",["75"],["76"],"no-global-assign","no-unsafe-negation"]